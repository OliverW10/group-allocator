CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;
CREATE TABLE "Classes" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Code" text NOT NULL,
    "Name" text NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Classes" PRIMARY KEY ("Id")
);

CREATE TABLE "Users" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "IsAdmin" boolean NOT NULL,
    "Name" text NOT NULL,
    "Email" text NOT NULL,
    CONSTRAINT "PK_Users" PRIMARY KEY ("Id")
);

CREATE TABLE "Clients" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NOT NULL,
    "ClassId" integer NOT NULL,
    CONSTRAINT "PK_Clients" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Clients_Classes_ClassId" FOREIGN KEY ("ClassId") REFERENCES "Classes" ("Id") ON DELETE CASCADE
);

CREATE TABLE "SolveRuns" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Timestamp" timestamp with time zone NOT NULL,
    "PreferenceExponent" double precision NOT NULL,
    "ClassId" integer NOT NULL,
    CONSTRAINT "PK_SolveRuns" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_SolveRuns_Classes_ClassId" FOREIGN KEY ("ClassId") REFERENCES "Classes" ("Id") ON DELETE CASCADE
);

CREATE TABLE "ClassTeachers" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TeacherId" integer NOT NULL,
    "ClassId" integer NOT NULL,
    "Role" integer NOT NULL,
    CONSTRAINT "PK_ClassTeachers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ClassTeachers_Classes_ClassId" FOREIGN KEY ("ClassId") REFERENCES "Classes" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ClassTeachers_Users_TeacherId" FOREIGN KEY ("TeacherId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Payments" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PayerId" integer NOT NULL,
    "ForClassId" integer NOT NULL,
    "Amount" numeric NOT NULL,
    "PayedAt" timestamp with time zone NOT NULL,
    "Plan" integer NOT NULL,
    "StripeSessionId" text NOT NULL,
    "Currency" text NOT NULL,
    CONSTRAINT "PK_Payments" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Payments_Classes_ForClassId" FOREIGN KEY ("ForClassId") REFERENCES "Classes" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Payments_Users_PayerId" FOREIGN KEY ("PayerId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Students" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "ClassId" integer NOT NULL,
    "Notes" text NOT NULL,
    "WillSignContract" boolean,
    "IsVerified" boolean NOT NULL,
    CONSTRAINT "PK_Students" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Students_Classes_ClassId" FOREIGN KEY ("ClassId") REFERENCES "Classes" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Students_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Projects" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NOT NULL,
    "RequiresNda" boolean NOT NULL,
    "ClientId" integer NOT NULL,
    "MinStudents" integer NOT NULL,
    "MaxStudents" integer NOT NULL,
    "MinInstances" integer NOT NULL,
    "MaxInstances" integer NOT NULL,
    "ClassId" integer NOT NULL,
    CONSTRAINT "PK_Projects" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Projects_Classes_ClassId" FOREIGN KEY ("ClassId") REFERENCES "Classes" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Projects_Clients_ClientId" FOREIGN KEY ("ClientId") REFERENCES "Clients" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Files" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Blob" bytea NOT NULL,
    "Name" text NOT NULL,
    "StudentId" integer NOT NULL,
    CONSTRAINT "PK_Files" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Files_Students_StudentId" FOREIGN KEY ("StudentId") REFERENCES "Students" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Preferences" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StudentId" integer NOT NULL,
    "ProjectId" integer NOT NULL,
    "Ordinal" integer NOT NULL,
    CONSTRAINT "PK_Preferences" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Preferences_Projects_ProjectId" FOREIGN KEY ("ProjectId") REFERENCES "Projects" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Preferences_Students_StudentId" FOREIGN KEY ("StudentId") REFERENCES "Students" ("Id") ON DELETE CASCADE
);

CREATE TABLE "StudentAssignments" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StudentId" integer NOT NULL,
    "ProjectId" integer NOT NULL,
    "RunId" integer NOT NULL,
    "GroupInstanceId" integer NOT NULL,
    CONSTRAINT "PK_StudentAssignments" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_StudentAssignments_Projects_ProjectId" FOREIGN KEY ("ProjectId") REFERENCES "Projects" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_StudentAssignments_SolveRuns_RunId" FOREIGN KEY ("RunId") REFERENCES "SolveRuns" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_StudentAssignments_Students_StudentId" FOREIGN KEY ("StudentId") REFERENCES "Students" ("Id") ON DELETE CASCADE
);

CREATE INDEX "IX_ClassTeachers_ClassId" ON "ClassTeachers" ("ClassId");

CREATE INDEX "IX_ClassTeachers_TeacherId" ON "ClassTeachers" ("TeacherId");

CREATE INDEX "IX_Clients_ClassId" ON "Clients" ("ClassId");

CREATE INDEX "IX_Files_StudentId" ON "Files" ("StudentId");

CREATE INDEX "IX_Payments_ForClassId" ON "Payments" ("ForClassId");

CREATE INDEX "IX_Payments_PayerId" ON "Payments" ("PayerId");

CREATE INDEX "IX_Preferences_ProjectId" ON "Preferences" ("ProjectId");

CREATE INDEX "IX_Preferences_StudentId" ON "Preferences" ("StudentId");

CREATE INDEX "IX_Projects_ClassId" ON "Projects" ("ClassId");

CREATE INDEX "IX_Projects_ClientId" ON "Projects" ("ClientId");

CREATE INDEX "IX_SolveRuns_ClassId" ON "SolveRuns" ("ClassId");

CREATE INDEX "IX_StudentAssignments_ProjectId" ON "StudentAssignments" ("ProjectId");

CREATE INDEX "IX_StudentAssignments_RunId" ON "StudentAssignments" ("RunId");

CREATE INDEX "IX_StudentAssignments_StudentId" ON "StudentAssignments" ("StudentId");

CREATE INDEX "IX_Students_ClassId" ON "Students" ("ClassId");

CREATE INDEX "IX_Students_UserId" ON "Students" ("UserId");

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250702003226_InitialCreate', '9.0.1');

COMMIT;

